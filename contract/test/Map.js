const { ethers } = require("hardhat");
const hre = require("hardhat");

async function deployVerifier() {
  const UltraVerifier = await hre.ethers.getContractFactory("UltraVerifier");
  const ultraVerifier = await UltraVerifier.deploy();
  await ultraVerifier.deployed();
  console.log(ultraVerifier.address);
  return ultraVerifier.address;
}

async function deployMap({ verifierAddress }) {
  const timeline = await ethers.deployContract("Map", [verifierAddress]);
  await timeline.deployTransaction.wait();
  return timeline;
}

async function newLocation({ map, proof, input }) {
  const public_inputs = [
    ...input.map((x) => ethers.utils.hexZeroPad(ethers.utils.hexlify(x), 32)),
  ];

  await map.addLocation(proof, input);
}

describe("Map contract", function () {
  it("Deployment", async function () {
    const [owner] = await ethers.getSigners();

    const verifierAddress = await deployVerifier();
    const map = await deployMap({
      verifierAddress: verifierAddress,
    });
  });

  it("Location", async function () {
    const verifierAddress = await deployVerifier();
    const map = await deployMap({
      verifierAddress: verifierAddress,
    });

    await newLocation({
      map: map,
      proof:
        "0x293643e3c460538590ff77a0deef37df522dd919ba5af8cbba3ef7c94addc4dd174116366148ed1027c6ddeaa7cb4a895dd90f7056b6bece7f1df0099d81e0f927602744dec61d13237bc3688608257951babed165269f3ab8b32aae44d03bfa164f3d8103d07aabd599545d471fb2fed2dda2658091b6b11184c1eda8723fa00e0078d2596be5c0659d6bc3a6086785d13813e18433c237ec2905b0af731af30558a47c4c922f5bd64d8d98c415bd6286ef23918c6b2a085446333bbf06557e26c89d05e49bd7f22ae4d72f88b4de07d65a615770c22774518434659552b286020a8387ad09f183f2c164c1b39b0310779057263522aa8c6e6e6b6479350c9225fdd47c2e2ea71a59caeb0bae8bd300e9869593751a50c44000b844ab9df7de04750a2a85f2005dc97e708c52efa3c10e487a695bf678fbb772d25fb0248cdd0097082d6d0a9e02bd13ae44a6ba8de43cbe24711b270d5fba9188a24bb523bf2cf9f52719100be9229d5ddf68ec0f5c089fc4541c39cc2fcc2dbaa795127a8d2ab9c5ccb9b97a1910db6cfda2af0c928932c7130986e2203659ee2718fc586a2f9febca84f2e7f9c20ff5e6f641794580b120885624166c3fa8e949fa48ea7e19fc45e0df319d056381244806df9b3914638475262ccdc87ad1e3f3d9a151ba2e4154a96967c4e8ed8b816427de5b643c842fe32212c7f615a96b17154ce2bf0fc6bfd9e02bdd431aa5a30574d0965edff47282afbb07e9bdc9d0152bfbe15e1e2abef1d89075c5ea3560755f1f4ddffc0734030bc9dc403348af318eb551530dfd3f492d60d127e2eb7f7df0493e0ab32604be9448b71c292f3987fe512fbb258927f8fdf95926a13d6021f033d864a500967fb36a7144253ece9095f3bece11d35eb93edf5de760747bbc2d6d7b4e0b45e7a719f29c42f1f7c8cbab04a62f0ad59d74fd8249064102cafee8ef97c264a8efe97fb0a99aa6164cfe477666c6016bbc146461c13e7986dea3833d649415edac5c2e8cf7f7e1cfa7e74525b78315f6f2463e8f9b7f4f9f595d6b4aabf6d2cdf1d02b51e98c3ffe7a378ebc1675029561c6922643bbb77b47470c9614a029ae939d32f2ee7442a107d3093a2f0f0d0f0eea02d86454b9fe9add42726f4fbc28adb464fb4f062df2173af2ea44870a47ad623cb82f1f7e33e42e018ffc0b5aeedf593bf87382a9e259973d7d58e517b64643a79e204992f77b6f29d6a60ffbcfa5a5fa7026659bdac50b740f2b53096c71c3efacbb2d1ec2b55037afb767fe134ae0b2457aa64953074aa38db3851e4f104863b63705e50095a9b77676ca9e614dc54165a39786a3d490b187d63c0ae2e82673a3214592bbd8e8c646dad4106da2c60ac66196025218bb45ab8fd41f931587de52f153e92b27b5a557a029faea890dd465220faf4feb05131beae607c735cbaa7f4b298db4b604fbab7e76896aee3f8b494c773fa18223f120d90d1ababe7a2db050ceda536a15caa3e37dbeb1a53d43bf04cef6ddf0d0209f3907098ddfff68c7686cdedfe692c09927bb8e821720d3043bd360dd50cfc44ae62f20de9a3765aef4b326d2a1d50717c83a78333119a0c8d49295c555fc522a57c5152072aef4f02f7ca1ee53f82453edbfaff2042e1cc00adcd52e83cb0c689740107492c8c9d92a96a7e1479f2b07f4c77dc5b1c46584d19520af4164f093ec1c17da2f646b96591bde4b279e6f2420ae6de87de57cf40e7955b3299d7e5dd2f41decbd2794dfa0e8cf53ebc461313a1ec51b378cf3ec8d644f6fa0751c1eed030d2a1fb452bdcb0a4d1e51d62d2f54e4d40dd375e82afbf564fe70adaa624ec522163f1a6a67c2066a015413e886aec969cbdc35904428ae35f3d885aba58e831b1e7d9b4f419e88a14b346ee9a34740ab0dcd4dbd1b8ed713c4173d1ee2c03e0f6bf82f10c5a6ced45e1da968205fc6a8e91f6111fe62242cacc025e4a4c489185c49c622c28bc9fa902fd36a19011725ea757dbeac3d0e5508fcd86dcb4d2e2e8da94627b9d3f9268a3ccff36bcba6895a69847cb4db79f54ef942b3c40f1229549279e1260cdfea644407ec58e3e3a768a82b422f9e4c905ae3b195d472562961593377677a46bab9613f0d30fb8f5820608c0a5d9a66334d636ddc1689881792dae365b7b37acad67b805c23822c993218371f5ac31295c6a71ce9ac809523a0d570804fabf186b095046fcd6d6a53a703c9b5c68b716b9546ad8040e3742647cffeaaca51dacb5b5e74b3bc13a6a1fe723030d5b5ca3191bce9b82493952ae98b140b4e738e7184e7cb232f016adcb5821a14f339d46a8b169b0c0884e106bd8d991cdd12613bc05bdbef4bb289b52f74016fdb5ab56e244a41b69fe0160a7b96e26e310735ca16319b4a140773314f71246563a72df9b305222d1638c72cb058f309bc266f6323d00708a3fd37716fdb1395d0c6ce1efbc98bc9519b28061aa2e4adf943ef6cb069be573f76a57d377c135fa2250e91e672fb50e3651118ecce53687f33ed4a97ec8789e95b005b37ddc23425967f472091e3028f581517ecc28a935525785d7f3c5c4e3669edcc835c7425f89ea9a01f086f93738eec1292bc251893e6663528656c667682a1ad0c109259aab1dadbfe163216d65009097113d8b3920d2be20355d0b038ad77b6b5d1f476c41b8474f618fba80fe079081aff16552bd9250a31e5b69a8e27c6a5a658db917ec4ed2bdc412be70d674d27ee0c056fcc8f5fa558ac23b71aa8a6cb5074c0e9559ad1361facf76d46f12f25dcb7950c3169a2ba868ab6036bff74db1be59bf26c25e6e0c7fceeda70e7d617c1dc0f360654f0c2d15b89b00d364a447ec896f8cef46fa31ea1f89740951b2f8a75c6424f36c8e99e6a82c7a7baaa6344078c2f330003c5b8f7953b67e1d91c70e8062fa017ce2e4cf4efa6fc19065e0dc6342e51d194f6b69c68c8250e1812f43ad5e885eacb864093315ba4b47e62ff3ec003abf8da0da94b90d4b7d93a",
      input: [
        "0x0000000000000000000000000000000000000000000000000000000000000052",
        "0x0000000000000000000000000000000000000000000000000000000000000000",
        "0x0000000000000000000000000000000000000000000000000000000000000042",
        "0x0000000000000000000000000000000000000000000000000000000000000000",
        "0x000000000000000000000000000000000000000000000000000000000000004f",
        "0x0000000000000000000000000000000000000000000000000000000000000000",
        "0x000000000000000000000000000000000000000000000000000000000000003d",
        "0x0000000000000000000000000000000000000000000000000000000000000000",
        "0x0000000000000000000000000000000000000000000000000000000000000063",
        "0x0000000000000000000000000000000000000000000000000000000000000000",
        "0x000000000000000000000000000000000000000000000000000000000000003a",
        "0x0000000000000000000000000000000000000000000000000000000000000000",
        "0x000000000000000000000000000000000000000000000000000000000000007a",
        "0x0000000000000000000000000000000000000000000000000000000000000000",
        "0x0000000000000000000000000000000000000000000000000000000000000047",
        "0x0000000000000000000000000000000000000000000000000000000000000000",
        "0x000000000000000000000000000000000000000000000005d9e87049220b59ac",
        "0x000000000000000000000000000000000000000000000001c3e03e28ff02c346",
        "0x000000000000000000000000000000000000000000000000d0feb4d6ca439db6",
        "0x0000000000000000000000000000000000000000000000000002451dbb61d449",
        "0x00000000000000000000000000000000000000000000000a0b41ed20bac4cf4e",
        "0x000000000000000000000000000000000000000000000005db9894d8d3ef97fd",
        "0x000000000000000000000000000000000000000000000009d03d163e9d925eec",
        "0x00000000000000000000000000000000000000000000000000007305d680d112",
        "0x00000000000000000000000000000000000000000000000e198901e99ec27740",
        "0x0000000000000000000000000000000000000000000000054abd5f7feb5fb495",
        "0x000000000000000000000000000000000000000000000006eb0ec6fa479c4e8d",
        "0x0000000000000000000000000000000000000000000000000002f22e39f14795",
        "0x00000000000000000000000000000000000000000000000c4443d77f3132056f",
        "0x000000000000000000000000000000000000000000000008707d7bb8074df5ac",
        "0x000000000000000000000000000000000000000000000004043798ba95017c1c",
        "0x0000000000000000000000000000000000000000000000000002327b2718c643",
      ],
    });

    const count = await map.addressLocationCount();

    const loc = await map.addressLocation(count - 1);

    console.log(loc);
  });
});
